/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package inheritance2;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test void ResturantName() {
        Restaurant rest=new Restaurant("Mcdonalds",5,2);
        assertEquals("Resturant Name {Mcdonalds} Rate {5.0} Price Cat {2.0 $ }\n" +
                "[]\n",rest.toString());
    }
    @Test void ResturantReview() {
        Review rest=new Review("It is a good resturant","Baraa",2);
        assertEquals("Review {It is a good resturant} Auther {Baraa} Rate {2.0}",rest.toString());
    }
    @Test void addMutiplerev(){
        Restaurant res=new Restaurant("Mcdonalds",5,2);

        res.addReview("good one","baraa",3);
        res.addReview("good food","Mohammad",5);
        res.addReview("yumy ","Hydaya",3);
        assertEquals("Resturant Name {Mcdonalds} Rate {3.6666667} Price Cat {2.0 $ }\n[Review {good one} Auther {baraa} Rate {3.0}, Review {good food} Auther {Mohammad} Rate {5.0}, Review {yumy } Auther {Hydaya} Rate {3.0}]\n",res.toString());
    }
    @Test void addReviewMoreThanFive(){
        Restaurant res=new Restaurant("Hardees",0,2);
        res.addReview("goodone","baraa",7);
        assertEquals("Resturant Name {Hardees} Rate {0.0} Price Cat {2.0 $ }\n" +
                "[]\n",res.toString());
    }
    //Create New Shop
    @Test void createNewShop(){
        Shop sho=new Shop("Almadina","Good",0,5);
        assertEquals("Shop name is {Almadina} Shop description {Good} Number of starts {0.0} Price Categories {null$$$$$}\n" +
                "[]\n",sho.toString());
    }
    //add review to shop
    @Test void addMultipleReviewsforShop(){
        Shop sho=new Shop("Almadina","Good",0,5);
        sho.addShoprev("Goog one","Mokdad",3);
        sho.addShoprev("cheap","Hanaa",5);
        assertEquals("Shop name is {Almadina} Shop description {Good} Number of starts {4.0} Price Categories {null$$$$$}\n" +
                "[Review {Goog one} Auther {Mokdad} Rate {3.0}, Review {cheap} Auther {Hanaa} Rate {5.0}]\n",sho.toString());
    }
    //Create New Theater
    @Test void CreateNewTheater(){
        Theater cim=new Theater("Prime",5);
        assertEquals("Theater is {Prime}{5.0}[]\nMy Movies List{[]}",cim.toString());
    }
    //Add Review to Theater
    @Test void AddReviewTOTHeater(){
        Theater cim=new Theater("Prime",5);
        cim.revmovies("Comfortable","Mokdad",3);
        assertEquals("Theater is {Prime}{3.0}[Review {Comfortable} Auther {Mokdad} Rate {3.0}]\n" +
                "My Movies List{[]}",cim.toString());
    }
    // Add and remove movies fom movies list
    @Test void AddAndRemoveMoviesFormList(){
        Theater cim=new Theater("Prime",5);
        cim.revmovies("Comfortable","Mokdad",3);
        cim.PutMovies("Patman");
        cim.PutMovies("Superman");
        cim.PutMovies("Room");
        cim.DeleteMovies("Superman");
        assertEquals("Theater is {Prime}{3.0}[Review {Comfortable} Auther {Mokdad} Rate {3.0}]\n" +
                "My Movies List{[Patman, Room]}",cim.toString());
    }
}
